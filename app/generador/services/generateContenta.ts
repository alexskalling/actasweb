"use server";

import { google } from "@ai-sdk/google";
import { generateText } from "ai";
import {
  manejarError,
  writeLog,
  guardarArchivo,
  verificarArchivoExistente,
  obtenerContenidoArchivo,
} from "./utilsActions";
import io from "socket.io-client";

// üîë Conexi√≥n Socket.IO (FUERA de la funci√≥n uploadFile, se inicializa una sola vez)
const socketBackendReal = io(process.env.NEXT_PUBLIC_SOCKET_URL);

socketBackendReal.on("connect_error", (error) => {
  console.error("Error de conexi√≥n Socket.IO desde backend real:", error);
});
socketBackendReal.on("connect_timeout", (timeout) => {
  console.error("Timeout de conexi√≥n Socket.IO desde backend real:", timeout);
});
socketBackendReal.on("disconnect", (reason) => {
  console.log("Desconexi√≥n de Socket.IO desde backend real:", reason);
});

export async function generateContenta(
  folder: string,
  file: string,
  fileid: string,
  transcipcion: string
) {
  const nombreContenido = `${file.replace(/\.[^/.]+$/, "")}_Contenido.txt`;
  const nombreTranscripcion = `${file.replace(
    /\.[^/.]+$/,
    ""
  )}_Transcripcion.txt`;

  try {
    writeLog(`Verificando contenido existente: ${nombreContenido}`);

    if (await verificarArchivoExistente(nombreContenido, folder)) {
      writeLog(`Contenido existente: ${nombreContenido}. Cargando.`);
      const contenidoExistente = await obtenerContenidoArchivo(
        folder,
        nombreContenido
      );
      return { status: "success", content: contenidoExistente };
    }

    writeLog(`Generando contenido para: ${file}`);
    socketBackendReal.emit("upload-status", {
      roomName: folder,
      statusData: {
        message: `[Contenido] Leyendo, entendiendo y analisando el contenido de: ${file} `,
      },
    });

    let contenidoTranscripcion = transcipcion;

    if (!contenidoTranscripcion) {
      writeLog(
        `Transcripci√≥n no proporcionada como par√°metro. Verificando transcripci√≥n existente: ${nombreTranscripcion}`
      );
      if (!(await verificarArchivoExistente(nombreTranscripcion, folder))) {
        writeLog(`Transcripci√≥n no encontrada: ${nombreTranscripcion}`);
        return {
          status: "error",
          message: "Transcripci√≥n no encontrada en Nextcloud.",
        };
      }
      writeLog(
        `Transcripci√≥n encontrada: ${nombreTranscripcion}. Obteniendo contenido.`
      );
      //@ts-expect-error revisar despues - This comment can be removed if types are properly checked.
      contenidoTranscripcion = await obtenerContenidoArchivo(
        folder,
        nombreTranscripcion
      );
      if (!contenidoTranscripcion) {
        return {
          status: "error",
          message:
            "No se pudo obtener el contenido de la transcripci√≥n desde Nextcloud.",
        };
      }
    } else {
      writeLog(`Usando transcripci√≥n proporcionada como par√°metro.`);
    }

    writeLog(`Generando Orden del D√≠a con Gemini para: ${file}`);
    socketBackendReal.emit("upload-status", {
      roomName: folder,
      statusData: {
        message: `[Contenido] Generando el orden del dia de la reunion `,
      },
    });
    let responseGeminiOrdenDelDia;
    let retryCountOrdenDelDia = 0;
    const maxRetriesOrdenDelDia = 5;
    let modelNameOrdenDelDia = "gemini-2.0-flash-thinking-exp-01-21"; // Puedes mantener este modelo inicial

    while (retryCountOrdenDelDia < maxRetriesOrdenDelDia) {
      try {
        responseGeminiOrdenDelDia = await generateText({
          model: google(modelNameOrdenDelDia),
          maxTokens: 100000,
          temperature: 0,
          system: await getSystemPromt("Orden"),
          prompt: await getUserPromt(
            "Orden",
            "Orden",
            contenidoTranscripcion,
            "test",
            0
          ),
        });
        break; // Si la llamada es exitosa, sal del bucle
      } catch (error) {
        console.error(
          `Error al generar el Orden del D√≠a (intento ${
            retryCountOrdenDelDia + 1
          }):`,
          error
        );
        retryCountOrdenDelDia++;
        if (retryCountOrdenDelDia > 1) {
          modelNameOrdenDelDia = "gemini-2.0-flash"; // Mantener el mismo modelo o cambiar si lo prefieres
          console.log("Cambio de modelo (Orden del D√≠a) a gemini-2.0-flash");
        }
        if (retryCountOrdenDelDia >= maxRetriesOrdenDelDia) {
          console.error(
            "M√°ximo n√∫mero de intentos alcanzado al generar el Orden del D√≠a."
          );
          return {
            status: "error",
            message:
              "Error al generar el Orden del D√≠a despu√©s de varios intentos.",
          };
        }
        await new Promise((resolve) => setTimeout(resolve, 5000)); // Espera antes de reintentar
      }
    }

    //@ts-expect-error revisar despues - This comment can be removed if types are properly checked.

    const jsonCleaned = responseGeminiOrdenDelDia.text
      .trim()
      .replace(/^`+|`+$/g, "")
      .replace(/^json/i, "");

    try {
      const ordenDelDiaJSON = JSON.parse(jsonCleaned);
      socketBackendReal.emit("upload-status", {
        roomName: folder,
        statusData: {
          message: `[Contenido] Orden del dia listo `,
        },
      });
      console.log(ordenDelDiaJSON);
      const contenido = await procesarOrdenDelDia(
        ordenDelDiaJSON,
        folder,
        socketBackendReal,
        contenidoTranscripcion
      );

      const contenidoFormato = contenido
        .replace(/```html/g, "")
        .replace(/html/g, "")
        .replace(/```/g, "")
        .replace(/< lang="es">/g, "")
        .replace(/<\/?>/g, "")
        .replace(/\[Text Wrapping Break\]/g, "")
        .trim();

      writeLog(`Guardando contenido en Nextcloud: ${nombreContenido}`);
      await guardarArchivo(folder, nombreContenido, contenidoFormato);
      writeLog(`Contenido guardado: ${nombreContenido}`);

      return { status: "success", content: contenidoFormato };
    } catch (jsonError) {
      manejarError("generateContenta - Error JSON", jsonError);
      writeLog(`Error JSON parse: . JSON Text: ${jsonCleaned}`);
      return {
        status: "error",
        message: "Error al procesar el Orden del D√≠a (JSON inv√°lido).",
      };
    }
  } catch (error) {
    manejarError("generateContenta", error);
    return {
      status: "error",
      message: "Error durante la generaci√≥n del contenido.",
    };
  }
}

async function procesarOrdenDelDia(
  //@ts-expect-error revisar despu√©s
  ordenDelDiaJSON,
  //@ts-expect-error revisar despu√©s
  folder,
  //@ts-expect-error revisar despu√©s
  socketBackendReal,
  //@ts-expect-error revisar despu√©s
  contenidoTranscripcion
) {
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  let contenido = "";

  let index = 0;
  let modelName = "gemini-2.0-flash-thinking-exp-01-21";
  const maxRetries = 5;
  let retryCount = 0;

  for (const tema of ordenDelDiaJSON) {
    console.log(tema);
    if (tema.nombre != "Cabecera" && tema.nombre != "Cierre") {
      socketBackendReal.emit("upload-status", {
        roomName: folder,
        statusData: {
          message: `[Contenido] ${index}/${ordenDelDiaJSON.length - 2}   ${
            tema.nombre
          }   `,
        },
      });
    }
    console.log(index);
    const promptType =
      tema.nombre === "Cabecera"
        ? "Cabecera"
        : tema.nombre === "Cierre"
        ? "Cierre"
        : "Contenido";

    let responseTema;
    retryCount = 0;

    while (retryCount < maxRetries) {
      try {
        responseTema = await generateText({
          model: google(modelName),
          maxTokens: 100000,
          temperature: 0,
          system: await getSystemPromt(promptType),
          prompt: await getUserPromt(
            promptType,
            tema.nombre,
            contenidoTranscripcion,
            ordenDelDiaJSON,
            index
          ),
        });
        console.log(responseTema.text.trim());
        contenido += responseTema.text.trim();
        break;
      } catch (error) {
        console.error(
          `Error al procesar tema ${tema.nombre} (intento ${retryCount + 1}):` +
            error
        );

        retryCount++;
        if (retryCount > 1) {
          modelName = "gemini-2.0-flash";
          console.log("Cambio de modelo a gemini-2.0-flash");
        }

        if (retryCount >= maxRetries) {
          console.error(
            "M√°ximo n√∫mero de intentos alcanzado, no se pudo procesar el tema."
          );
          contenido += `[Error: No se pudo procesar ${tema.nombre}. M√°ximo n√∫mero de intentos alcanzado.]`;
          break;
        }

        await new Promise((resolve) => setTimeout(resolve, 5000));
      }
    }
    index++;
  }
  if (contenido.trim() === "") {
    console.warn("Advertencia: El contenido est√° vac√≠o.");
  }
  return contenido;
}

async function getSystemPromt(tipo: string) {
  let systemPromt = "";

  switch (tipo) {
    case "Orden":
      systemPromt = `
Eres un asistente experto en an√°lisis de reuniones. Tu √∫nica tarea es procesar transcripciones de reuniones y generar un **orden del d√≠a** en formato JSON, siguiendo estrictamente la estructura establecida.

Reglas estrictas:
1. **Solo responde con JSON v√°lido**. No agregues explicaciones, comentarios ni texto adicional antes o despu√©s del JSON.
2. **Estructura JSON obligatoria:**  
   - Si hay un "Orden del D√≠a" expl√≠cito en la transcripci√≥n, resp√©talo  pero aun asi revisa la trasncipcion por temas improtantes que no se nombren  e incluyelso para aunemtar la calidad del orden del dia.
a   SI EN LA TRASNCRIPCION   dicen un orden del diatomalo como base y  agrega cosas si es que es necesario pero no quites cosas revisa lso grandes temas y  dam ele meojro orden del dia psoible enornde cornologico
   - Si no hay un "Orden del D√≠a", genera uno basado en los grandes temas tratados pero igua asegurate de que no hay  pro qeu si hay debe ser la bse minima de trabajo y creciendo desde ahi, manteniendo el orden cronol√≥gico. 
   asegurate de que lso temas seran plasmados en el otrden del dia generado y qeu no vas a cambiar el roden bajo ninguan razon 
   - Siempre debe empezar con { "id": 0, "nombre": "Cabecera" } y terminar con { "id": n + 1, "nombre": "Cierre" }.  
3. **No incluyas subtemas ni detalles menores**. Solo los grandes temas.  
4. **La respuesta debe ser un JSON puro, sin etiquetas, ni nombres adicionales, solo un array de objetos JSON con los id y nombres**.  
5. **Si la transcripci√≥n est√° vac√≠a o no tiene informaci√≥n relevante, responde con:**  
   

[
  { "id": 0, "nombre": "Cabecera" },//obligatorio
  { "id": 1, "nombre": "titulo claro y diciente" },
  { "id": 2, "nombre": "Cierre" }//obligatorio
]

Ejemplo de respuesta correcta ES SOLO REFERENCIAL NO DEBE SER COPIADO:

[
  { "id": 0, "nombre": "Cabecera" },
  { "id": 1, "nombre": "Verificaci√≥n del qu√≥rum" },
  { "id": 2, "nombre": "Lectura y aprobaci√≥n del orden del d√≠a" },
  { "id": 3, "nombre": "Elecci√≥n Presidente y secretario de la asamblea" },
  { "id": 4, "nombre": "Comisi√≥n verificadora del acta" },
  { "id": 5, "nombre": "Informe de administraci√≥n y el consejo de administraci√≥n" },
  { "id": 6, "nombre": "Estados financieros con corte a 31 de diciembre del 2024" },
  { "id": 7, "nombre": "Dictamen del revisor fiscal" },
  { "id": 8, "nombre": "Aprobaci√≥n de los estados financieros" },
  { "id": 9, "nombre": "Proposiciones y varios" },
  { "id": 10, "nombre": "Cierre" }
]
    `;
      return systemPromt;

    case "Cabecera":
      systemPromt = `PROMPT PARA GENERAR ACTA EN FORMATO HTML Eres un Secretario Ejecutivo profesional, experto en la redacci√≥n de actas formales. Tu tarea es convertir transcripciones en un documento HTML estructurado, asegurando que la informaci√≥n sea clara y fiel a lo discutido en la reuni√≥n.üîπ INSTRUCCIONES
‚úÖ Genera la cabecera del acta con los siguientes datos:

    T√≠tulo: // debes bsucarn en la trasncipocion si se dice que tipo de reunion es o qua que se ahce alusion pro eleplo reunionde consejo o asablema general.
    Fecha, hora y lugar: Extraer estos datos de la transcripci√≥n.
    Asistentes: Listar los nombres y cargos mencionados.
    Moderador o presidente de la reuni√≥n: Indicar qui√©n dirigi√≥ la sesi√≥n.
    Orden del D√≠a:
        Si en la transcripci√≥n se menciona un orden del d√≠a expl√≠cito, usarlo.
        Si no est√° claro, deducir los grandes temas tratados, sin subtemas ni detalles espec√≠ficos.

‚úÖ Salida estrictamente en HTML. No incluir texto fuera de etiquetas HTML.
üîπ FORMATO ESPERADO

<header>
  <h1 style="text-align: center;">ACA ira el nomrbe de la reunion que se encuentre en la trnascipcion</h1>//
  <p><strong>Fecha:</strong> [D√çA] de [MES] de [A√ëO]</p>
  <p><strong>Hora:</strong> Inicio: [HORA DE INICIO] - Cierre: [HORA DE CIERRE]</p>
  <p><strong>Lugar:</strong> [UBICACI√ìN]</p>
  <p><strong>Moderador:</strong> [NOMBRE]</p>
  <p><strong>Asistentes:</strong></p>
  <ul>
    <li>[NOMBRE] - [CARGO]</li>
    <li>[NOMBRE] - [CARGO]</li>
    <li>[NOMBRE] - [CARGO]</li>
  </ul>
  <h2>Orden del D√≠a</h2>
  <ol>
    <li>[GRAN TEMA 1]</li>
    <li>[GRAN TEMA 2]</li>
    <li>[GRAN TEMA 3]</li>
    <li>[GRAN TEMA 4]</li>
  </ol>
</header>

‚úÖ Todo el contenido debe generarse en HTML.
‚úÖ Si el orden del d√≠a no est√° claro en la transcripci√≥n, se deben deducir los grandes temas tratados.
‚úÖ Formato limpio, bien estructurado y sin agregar informaci√≥n inventada.`;
      return systemPromt;

    case "Contenido":
      systemPromt = `INSTRUCCIONES PARA EL DESARROLLO DE UN TEMA DEL ACTA EJECUTIVA

Como Secretario Ejecutivo, debes redactar cada tema tratado en la reuni√≥n de manera clara, formal y estructurada, asegurando fidelidad al contenido sin caer en transcripciones literales ni en res√∫menes superficiales.
üîπ Pautas generales:

titulo: de ser el qeu esta en el tema y debe estar numerado segun el indice que llega como parametro

‚úÖ Calidad y profundidad

    No omitas informaci√≥n relevante ni simplifiques en exceso.
    Asegura que la redacci√≥n refleje con fidelidad lo discutido, con la extensi√≥n adecuada para cada tema.

‚úÖ Narrativa fluida

    Evita una estructura r√≠gida con demasiados subt√≠tulos o listas excesivas.
    La redacci√≥n debe leerse con naturalidad, sin parecer un guion segmentado.
    Usa subt√≠tulos solo cuando realmente ayuden a organizar mejor la informaci√≥n dentro de un mismo tema.

‚úÖ Evitar redundancias y asegurar coherencia

    Antes de desarrollar un tema, revisa el orden del d√≠a para asegurarte de que la informaci√≥n no se repite innecesariamente en otros apartados.
    Si un punto se abordar√° con mayor profundidad en otro tema, menciona la relaci√≥n sin adelantar detalles.
    Cada tema debe ser autosuficiente, pero sin duplicar informaci√≥n que ya ser√° tratada en otro apartado.

‚úÖ Formato HTML estructurado

    La redacci√≥n debe estar en HTML para asegurar un correcto formato.
    Se permite el uso de negritas para resaltar puntos clave.
    Evitar abuso de listas o subt√≠tulos innecesarios que rompan la continuidad del texto.

Ejemplo de desarrollo de un tema en HTML:

<h2>1. Plan de Mejoras en Seguridad del Edificio</h2>

<p>En respuesta a la creciente preocupaci√≥n de los residentes por recientes incidentes de seguridad, se abord√≥ en la reuni√≥n la necesidad de reforzar los protocolos actuales y evaluar soluciones viables. Se presentaron informes sobre la situaci√≥n actual y se discutieron diversas estrategias de mejora.</p>

<p>El administrador expuso un informe con registros de los √∫ltimos seis meses, donde se identificaron fallas en el sistema de c√°maras, accesos no autorizados y deficiencias en la iluminaci√≥n de ciertas √°reas comunes. A partir de este diagn√≥stico, se abrieron las intervenciones para evaluar posibles soluciones.</p>

<p>Los asistentes coincidieron en que la actualizaci√≥n del sistema de c√°maras es prioritaria. Se sugiri√≥ la instalaci√≥n de equipos de mayor resoluci√≥n y una ampliaci√≥n del almacenamiento de grabaciones. Adem√°s, se propuso implementar un sistema de control de acceso mediante tarjetas electr√≥nicas o c√≥digos QR, lo que permitir√≠a un mejor monitoreo de ingresos y salidas.</p>

<p>Otro punto clave en la discusi√≥n fue la iluminaci√≥n de zonas vulnerables, como pasillos y estacionamientos. Se plante√≥ la instalaci√≥n de luces LED de mayor intensidad, priorizando las √°reas con mayor incidencia de reportes.</p>

<p>Si bien las propuestas fueron bien recibidas, algunos asistentes manifestaron inquietudes sobre los costos de implementaci√≥n. Se acord√≥ solicitar cotizaciones antes de la siguiente reuni√≥n para evaluar la viabilidad econ√≥mica de cada medida.</p>

<p>Finalmente, se estableci√≥ que la administraci√≥n quedar√° encargada de recopilar la informaci√≥n necesaria y presentar un informe detallado en la pr√≥xima sesi√≥n, con opciones concretas de proveedores y costos estimados.</p>

Diferencias clave con la versi√≥n anterior:

‚úÖ Se especifica revisar el orden del d√≠a antes de desarrollar un tema para evitar redundancias entre apartados.
‚úÖ Se mantiene una narrativa fluida sin fragmentar en exceso la informaci√≥n con listas o subt√≠tulos innecesarios.
‚úÖ Cada tema se redacta con la extensi√≥n adecuada, sin perder precisi√≥n ni caer en transcripciones o res√∫menes superficiales.
identifica bien los temas  no es lo mismo hablar de gastos que de inversion, o de tiempos de respuesta a plazos compromentidos 

`;
      return systemPromt;
    case "Cierre":
      systemPromt = `Eres un experto analista de reuniones con amplia experiencia en la documentaci√≥n y generaci√≥n de actas. Tu tarea es redactar el cierre de una reuni√≥n en formato HTML, asegurando que la estructura sea clara y bien organizada. Debes incluir los siguientes elementos:

    T√≠tulo del cierre de la reuni√≥n (ejemplo: "Cierre de la Reuni√≥n")
    Hora exacta de finalizaci√≥n de la reuni√≥n.
    Lista de los acuerdos m√°s importantes alcanzados, mostrando el responsable de cada acuerdo si est√° expl√≠cito en la transcripci√≥n.
    Espacio para firmas, indicando los participantes que deben firmar si es necesario.

Formato de salida esperado (HTML):

<div class="reunion-cierre">
    <h2>Cierre de la Reuni√≥n</h2>
    <p><strong>Hora de finalizaci√≥n:</strong> [Hora exacta]</p>

    <h3>Acuerdos alcanzados:</h3>
    <ul>
        <li>[Acuerdo 1] ‚Äì <strong>Responsable:</strong> [Nombre o "No especificado"]</li>
        <li>[Acuerdo 2] ‚Äì <strong>Responsable:</strong> [Nombre o "No especificado"]</li>
        <li>[Acuerdo 3] ‚Äì <strong>Responsable:</strong> [Nombre o "No especificado"]</li>
    </ul>

    <h3>Firma de los asistentes:</h3>
    <p>[Espacio para firmas]</p>
</div>

Instrucciones adicionales:

    La respuesta debe estar en formato HTML y seguir la estructura indicada.
    El contenido debe ser claro, formal y bien organizado.
    Si no hay responsables expl√≠citos en la transcripci√≥n, indicar "No especificado". `;
      return systemPromt;
  }
}

async function getUserPromt(
  tipo: string,
  tema: string,
  content: string,
  ordendeldia: string,
  numeracion: number
) {
  let userPromt = "";

  switch (tipo) {
    case "Orden":
      userPromt = `Procesa la siguiente transcripci√≥n de una reuni√≥n y extrae el orden del d√≠a en formato JSON.  

Transcripci√≥n:  

"""  
${content}  
"""  

Recuerda:  
- Si la transcripci√≥n menciona un "orden del d√≠a", resp√©talo.  
- Si no, identifica los grandes temas tratados y estruct√∫ralos en JSON.  
- No agregues comentarios ni explicaciones, solo responde con JSON v√°lido.
-respeta la estructura del json sin agregar eqitquetas ni nada que no sea pedido  

    `;
      return userPromt;
    case "Cabecera":
      userPromt = `INSTRUCCIONES DEFINITIVAS PARA GENERAR ACTAS EJECUTIVAS PROFESIONALES
ENTRADA OBLIGATORIA:

‚úÖ TRANSCRIPCI√ìN COMPLETA Y DETALLADA:
Utiliza la transcripci√≥n proporcionada como √∫nica fuente de informaci√≥n. No inventes ni agregues datos que no est√©n en la transcripci√≥n. La precisi√≥n y claridad del acta depender√°n directamente de la calidad de la transcripci√≥n de entrada.
GENERACI√ìN DE LA CABECERA:

La cabecera del acta debe contener los siguientes elementos:

    T√≠tulo: Busca en la transcripci√≥n si se menciona el tipo de reuni√≥n o el tema principal.si no se dice uno o no se sume ninguno por "acta de reunion
    Fecha, hora y lugar: Extrae esta informaci√≥n de la transcripci√≥n.
    Moderador o presidente: Identifica qui√©n dirigi√≥ la sesi√≥n.
    Asistentes: Lista los nombres y cargos de quienes participaron.
    Orden del D√≠a:
        Si se menciona un orden del d√≠a en la transcripci√≥n, usarlo.
        Si no est√° expl√≠cito, analizar la transcripci√≥n y deducir los grandes temas tratados, sin subtemas ni detalles excesivos.

FORMATO DE SALIDA (SOLO HTML):

<header>
  <h1 style="text-align: center;">Acta de la Reuni√≥n</h1>// recuerda bsucar en la transcriopcion se se dice que tipo de reunion es y eso usarloc omo titulo
  <p><strong>Fecha:</strong> [D√çA] de [MES] de [A√ëO]</p>
  <p><strong>Hora:</strong> Inicio: [HORA DE INICIO] - Cierre: [HORA DE CIERRE]</p>
  <p><strong>Lugar:</strong> [UBICACI√ìN]</p>
  <p><strong>Moderador:</strong> [NOMBRE]</p>
  <p><strong>Asistentes:</strong></p>
  <ul>
    <li>[NOMBRE] - [CARGO]</li>
    <li>[NOMBRE] - [CARGO]</li>
    <li>[NOMBRE] - [CARGO]</li>
  </ul>
  <h2>Orden del D√≠a</h2>
  <ol>
    <li>[GRAN TEMA 1]</li>
    <li>[GRAN TEMA 2]</li>
    <li>[GRAN TEMA 3]</li>
    <li>[GRAN TEMA 4]</li>
  </ol>
</header>

REGLAS ESTRICTAS:

‚úÖ Salida en HTML puro. No responder en texto plano ni en otro formato.
‚úÖ No inventar datos. Si falta informaci√≥n clave, dejar un espacio vac√≠o o indicar "[NO ESPECIFICADO]".
‚úÖ El "Orden del D√≠a" debe derivarse de los grandes temas de la transcripci√≥n si no est√° expl√≠cito.
‚úÖ No incluir subtemas en el orden del d√≠a.
TRANSCRIPCI√ìN:

${content} `;
      return userPromt;
    case "Contenido":
      userPromt = `INSTRUCCIONES DEFINITIVAS PARA GENERAR ACTAS EJECUTIVAS PROFESIONALES
üìå Objetivo:

Generar un acta de reuni√≥n profesional y detallada basada en la transcripci√≥n de la reuni√≥n. El contenido debe centrarse exclusivamente en el tema especificado, capturando todos los detalles relevantes discutidos, incluidas cifras, comentarios de los asistentes y decisiones tomadas, evitando redundancias innecesarias.
üìù Instrucciones Generales:
üîπ Enfoque preciso en el tema

    Se debe extraer y desarrollar contenido exclusivamente relacionado con el tema ${tema}, sin incluir informaci√≥n que pertenezca a otros puntos del orden del d√≠a.
    Antes de desarrollar el contenido, se debe revisar el orden del d√≠a ${ordendeldia} para asegurarse de que el tema en cuesti√≥n no se solape con otros puntos.
    ten en cuanta los comentarios de los asistente y de ser posibles integralso  comonaraccion dentro de lso contenidos
    Trata


    Numeracion del tema:${numeracion}
    Nombre del tema:${tema}
    los valors anteeriores se deben respetar y se deben poner como titulo de cada desarrollo del tema

üîπ Estilo de redacci√≥n

identifica bien los temas  no es lo mismo hablar de gastos que de inversion, o de tiempos de respuesta a plazos compromentidos quiero que tomes el tema  como base a respetar para buscar contenido
‚úÖ Narraci√≥n formal y en tercera persona: No debe haber lenguaje coloquial ni menciones en primera persona.
‚úÖ No se permiten res√∫menes: Se debe capturar toda la informaci√≥n relevante sin omitir detalles. Solo se permite concisi√≥n al referirse a actas anteriores.
La redaccion debe estar de manera estrica en modo de terceera persona y no se debe repetir informacion que ya se dio en otro tema
ten cuidado con ser muy redundate con el tema de lso cambios en el orden de dia apra no esta  a cada rato mencionando que se cambio el orden del dia
‚úÖ Estructura organizada y coherente:

    Evitar redundancias: Si un aspecto se desarrollar√° en otro punto del orden del d√≠a, se menciona la relaci√≥n sin repetir informaci√≥n.
    Fluidez narrativa: Evitar una estructura fragmentada o con exceso de listas que le resten naturalidad al acta.

üîπ Formato profesional y estructurado

‚úÖ Negritas para resaltar cifras y decisiones clave.
‚úÖ Subt√≠tulos solo cuando aporten claridad: No deben fragmentar en exceso el contenido.
‚úÖ Listas √∫nicamente cuando sea necesario: No abusar de ellas para evitar un formato de "lista de supermercado".
üîé Proceso de Desarrollo
1Ô∏è‚É£ Revisi√≥n del orden del d√≠a

    Analizar el contenido del orden del d√≠a (${ordendeldia}) antes de redactar.
    Asegurar que la informaci√≥n no se superponga con otros temas previamente discutidos o que ser√°n tratados m√°s adelante.

2Ô∏è‚É£ Extracci√≥n precisa de informaci√≥n

    Identificar dentro de la transcripci√≥n ${content} todas las menciones y detalles relacionados exclusivamente con el tema ${tema}.
    Omitir cualquier informaci√≥n irrelevante o que pertenezca a otro punto del orden del d√≠a.

3Ô∏è‚É£ Desarrollo del contenido

    Redactar en tercera persona con un tono formal y profesional.
    Incluir detalles espec√≠ficos como fechas, montos, acuerdos y nombres relevantes cuando sean mencionados.
    Asegurar coherencia en la estructura y evitar redundancias con otros puntos del acta.

4Ô∏è‚É£ Estructuraci√≥n y formato en HTML

    Encabezado principal: <h2>${numeracion}. ${tema}</h2> debe tener el valor de ${numeracion}. y del ${tema}
    Subt√≠tulos: <h3> solo para separar aspectos clave del mismo tema.
    Negritas: Para cifras, decisiones clave y puntos de relevancia.
    Listas: Solo cuando ayuden a organizar mejor la informaci√≥n sin fragmentarla innecesariamente.
    resalta  en bullets los resultados de las votaciones 

Ejemplo de Acta Generada

Tema: Mantenimiento de Instalaciones

<h2> 1. Fiananzas</h2>//la  y el nombre del tema y el indice

<p>Durante la reuni√≥n del 19 de febrero de 2025, se abord√≥ el estado del mantenimiento de las instalaciones, centr√°ndose en los problemas recurrentes en el sistema el√©ctrico y el drenaje. Se destacaron las preocupaciones de los asistentes sobre las fallas reportadas.</p>

<h3>Diagn√≥stico de Problemas</h3>

<p>El equipo de mantenimiento present√≥ un informe con las siguientes √°reas cr√≠ticas:</p>

<ul>
    <li><strong>Sistema el√©ctrico:</strong> Se registraron fallos intermitentes en la iluminaci√≥n, principalmente en los pasillos principales, con <strong>5 incidentes en enero</strong>, afectando la seguridad de los residentes.</li>
    <li><strong>Sistema de drenaje:</strong> Bloqueos recurrentes causaron <strong>inundaciones menores en el s√≥tano</strong> en varias ocasiones durante el √∫ltimo trimestre.</li>
</ul>

<h3>Medidas Aprobadas</h3>

<p>Tras la evaluaci√≥n, se aprobaron las siguientes acciones:</p>

<ul>
    <li><strong>Contrataci√≥n de especialistas:</strong> Se asign√≥ un presupuesto de <strong>$2,500</strong> para un diagn√≥stico integral de los sistemas afectados.</li>
    <li><strong>Reparaciones inmediatas:</strong> Se destinar√°n <strong>$1,500</strong> para solucionar fallos el√©ctricos urgentes.</li>
</ul>

<h3>Conclusiones</h3>

<p>Se aprob√≥ la contrataci√≥n de expertos y la ejecuci√≥n de reparaciones prioritarias. Adicionalmente, se implementar√° un <strong>plan de mantenimiento preventivo</strong> con un presupuesto anual espec√≠fico.</p>

üìå Mejoras clave en esta versi√≥n:

‚úÖ Se incorpora la revisi√≥n del orden del d√≠a (${ordendeldia}) antes de desarrollar un tema, evitando solapamientos o redundancias.
asegurate que elos titulo s de cada tema tengan  los  valores  de numeracion ${numeracion}  y tema ${tema} que se reciben 
‚úÖ Se enfatiza la necesidad de una narrativa fluida, sin abuso de subt√≠tulos o listas que interrumpan la lectura natural.
‚úÖ Se mantiene un balance entre claridad y estructura, asegurando una redacci√≥n profesional sin fragmentaciones innecesarias.
‚úÖ Se detalla el proceso paso a paso, facilitando la generaci√≥n de actas m√°s organizadas y precisas.
asegurate que todo el contenido si o si este en tercera persona y que no se repita informacion que ya se dio en otro tema`;
      return userPromt;

    case "Cierre":
      userPromt = `Eres un analista de reuniones experto en identificar acuerdos clave y estructurar el cierre de reuniones de manera clara y organizada. A partir de la transcripci√≥n proporcionada, tu tarea es extraer los principales acuerdos alcanzados y sus responsables, adem√°s de identificar la hora de finalizaci√≥n de la reuni√≥n si est√° expl√≠cita en el texto.
Pautas para el an√°lisis:

    Identifica la hora de finalizaci√≥n de la reuni√≥n dentro de la transcripci√≥n. Si no est√° mencionada, d√©jala vac√≠a.
    Extrae los acuerdos m√°s importantes, resumi√©ndolos de manera clara.
    Identifica al responsable de cada acuerdo si est√° expl√≠cito en la transcripci√≥n. Si no se menciona, indica "No especificado".
    Entrega la respuesta en formato HTML con la siguiente estructura:
        Un t√≠tulo para el cierre de la reuni√≥n.
        La hora de finalizaci√≥n.
        Una lista de acuerdos con sus respectivos responsables.
        Un espacio para firmas de los asistentes.

Ejemplo de salida esperada:

Si la transcripci√≥n menciona que la reuni√≥n finaliz√≥ a las 18:30 y se llegaron a los siguientes acuerdos:

    "El equipo de desarrollo implementar√° la nueva funcionalidad para el lunes" (responsable: Juan P√©rez).
    "Se programar√° una nueva reuni√≥n para evaluar avances" (sin responsable expl√≠cito).
    "Mar√≠a Rodr√≠guez enviar√° el informe financiero antes del viernes" (responsable: Mar√≠a Rodr√≠guez).

La respuesta en HTML debe generarse as√≠:


    <h2>Cierre de la Reuni√≥n</h2>
    <p><strong>Hora de finalizaci√≥n:</strong> 18:30</p>

    <h3>Acuerdos alcanzados:</h3>
    <ul>
        <li>El equipo de desarrollo implementar√° la nueva funcionalidad para el lunes ‚Äì <strong>Responsable:</strong> Juan P√©rez</li>
        <li>Se programar√° una nueva reuni√≥n para evaluar avances ‚Äì <strong>Responsable:</strong> No especificado</li>
        <li>Mar√≠a Rodr√≠guez enviar√° el informe financiero antes del viernes ‚Äì <strong>Responsable:</strong> Mar√≠a Rodr√≠guez</li>
    </ul>

    <h3>Firma de los asistentes:</h3>
    <p>[Espacio para firmas]</p>


Transcripci√≥n a analizar:


${content}


Genera la respuesta en HTML siguiendo la estructura indicada. `;
      return userPromt;
  }
}
